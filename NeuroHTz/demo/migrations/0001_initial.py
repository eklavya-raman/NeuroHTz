# Generated by Django 5.1.4 on 2025-09-29 22:05

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('patient_id', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('risk_factors', models.TextField(blank=True, help_text='Enter risk factors separated by commas')),
                ('hearing_condition', models.CharField(choices=[('normal', 'Normal'), ('mild_loss', 'Mild Hearing Loss'), ('moderate_loss', 'Moderate Hearing Loss'), ('severe_loss', 'Severe Hearing Loss'), ('profound_loss', 'Profound Hearing Loss')], default='normal', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(choices=[('normal', 'Normal'), ('abnormal', 'Abnormal'), ('inconclusive', 'Inconclusive')], max_length=20)),
                ('confidence_score', models.FloatField()),
                ('power_spectrum_40hz', models.FloatField()),
                ('phase_locking_index', models.FloatField()),
                ('latency_ms', models.FloatField()),
                ('ai_analysis', models.JSONField()),
                ('recommendations', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('generated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('shared_with', models.TextField(blank=True, help_text='List of healthcare providers/institutions shared with')),
                ('test_results', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='demo.testresults')),
            ],
        ),
        migrations.CreateModel(
            name='TestSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('test_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('signal_quality', models.CharField(default='unknown', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='demo.patient')),
            ],
        ),
        migrations.AddField(
            model_name='testresults',
            name='test_session',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='demo.testsession'),
        ),
        migrations.CreateModel(
            name='EEGData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.FloatField()),
                ('channel_data', models.JSONField()),
                ('filtered_40hz', models.JSONField()),
                ('signal_quality_score', models.FloatField()),
                ('test_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='demo.testsession')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
    ]
